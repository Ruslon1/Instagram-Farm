services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: instagram_bot
      POSTGRES_USER: instagram_bot
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-strong_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U instagram_bot"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  app:
    build: .
    environment:
      - DATABASE_URL=postgresql://instagram_bot:${POSTGRES_PASSWORD:-strong_password_123}@postgres:5432/instagram_bot
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=production
      - DEBUG=false
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - MS_TOKENS=${MS_TOKENS}
      - SECRET_KEY=${SECRET_KEY}
      - API_KEY=${API_KEY:-}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:3000}
    ports:
      - "8000:8000"
    volumes:
      - ./videos:/app/videos
      - ./sessions:/app/sessions
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  celery:
    build: .
    command: celery -A celery_app worker --loglevel=info --pool=solo
    environment:
      - DATABASE_URL=postgresql://instagram_bot:${POSTGRES_PASSWORD:-strong_password_123}@postgres:5432/instagram_bot
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=production
      - DEBUG=false
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - MS_TOKENS=${MS_TOKENS}
      - SECRET_KEY=${SECRET_KEY}
      - API_KEY=${API_KEY:-}
    volumes:
      - ./videos:/app/videos
      - ./sessions:/app/sessions
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://${VM_EXTERNAL_IP:-localhost}:8000/api
    restart: unless-stopped
    depends_on:
      - app


volumes:
  postgres_data:
  redis_data: