version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: instagram_bot_postgres
    environment:
      POSTGRES_DB: instagram_bot
      POSTGRES_USER: instagram_bot
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-strong_password_123}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U instagram_bot -d instagram_bot"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - instagram_bot_network

  redis:
    image: redis:7-alpine
    container_name: instagram_bot_redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - instagram_bot_network

  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: instagram_bot_app
    environment:
      # Database
      - DATABASE_URL=postgresql://instagram_bot:${POSTGRES_PASSWORD:-strong_password_123}@postgres:5432/instagram_bot
      - REDIS_URL=redis://redis:6379/0
      
      # Application
      - ENVIRONMENT=production
      - DEBUG=false
      - APP_NAME=Instagram Bot API
      - APP_VERSION=2.0.0
      
      # External APIs
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - MS_TOKENS=${MS_TOKENS}
      
      # Security
      - SECRET_KEY=${SECRET_KEY}
      - API_KEY=${API_KEY:-}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:3000}
      
      # File paths
      - VIDEOS_DIR=./videos
      - SESSIONS_DIR=./sessions
      - LOGS_DIR=./logs
      
      # Browser/Playwright settings
      - DISPLAY=:99
      - PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
      - PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1
      - PLAYWRIGHT_SKIP_VALIDATE_HOST_REQUIREMENTS=true
      - CHROME_BIN=/usr/bin/chromium
      - CHROME_DRIVER=/usr/bin/chromedriver
      - CHROME_OPTIONS=--headless,--no-sandbox,--disable-dev-shm-usage,--disable-gpu
      
      # Celery
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    
    ports:
      - "8000:8000"
    
    volumes:
      - ./videos:/app/videos
      - ./sessions:/app/sessions
      - ./logs:/app/logs
      
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
        
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
      
    restart: unless-stopped
    networks:
      - instagram_bot_network

  celery:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: instagram_bot_celery
    command: celery -A celery_app worker --loglevel=info --pool=solo --concurrency=1
    environment:
      # Database
      - DATABASE_URL=postgresql://instagram_bot:${POSTGRES_PASSWORD:-strong_password_123}@postgres:5432/instagram_bot
      - REDIS_URL=redis://redis:6379/0
      
      # Application
      - ENVIRONMENT=production
      - DEBUG=false
      - APP_NAME=Instagram Bot API
      - APP_VERSION=2.0.0
      
      # External APIs
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - MS_TOKENS=${MS_TOKENS}
      
      # Security
      - SECRET_KEY=${SECRET_KEY}
      - API_KEY=${API_KEY:-}
      
      # File paths
      - VIDEOS_DIR=./videos
      - SESSIONS_DIR=./sessions
      - LOGS_DIR=./logs
      
      # Browser/Playwright settings
      - DISPLAY=:99
      - PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
      - PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1
      - PLAYWRIGHT_SKIP_VALIDATE_HOST_REQUIREMENTS=true
      - CHROME_BIN=/usr/bin/chromium
      - CHROME_DRIVER=/usr/bin/chromedriver
      - CHROME_OPTIONS=--headless,--no-sandbox,--disable-dev-shm-usage,--disable-gpu
      
      # Celery
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    
    volumes:
      - ./videos:/app/videos
      - ./sessions:/app/sessions
      - ./logs:/app/logs
      
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      app:
        condition: service_healthy
        
    restart: unless-stopped
    networks:
      - instagram_bot_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: instagram_bot_frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://${VM_EXTERNAL_IP:-localhost}:8000/api
      - NODE_ENV=production
    restart: unless-stopped
    depends_on:
      - app
    networks:
      - instagram_bot_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  instagram_bot_network:
    driver: bridge
    name: instagram_bot_network