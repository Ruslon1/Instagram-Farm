version: '3.8'

services:
  bot:
    build:
      context: .
    container_name: instagram_bot_worker
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    volumes:
      - ./videos:/app/videos
    depends_on:
      - redis
      - db
    command: ["celery", "-A", "celery_app", "worker", "--loglevel=info"]

  bot_main:
    build:
      context: .
    container_name: instagram_bot_main
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    volumes:
      - ./videos:/app/videos
    depends_on:
      - redis
      - db
    command: ["python", "main.py"]

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"

  db:
    image: postgres:15.3
    container_name: postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
