name: Auto Deploy to Server

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        port: 22
        timeout: 20m
        command_timeout: 30m
        script: |
          echo "🚀 Starting deployment..."
          
          # Переходим в директорию проекта
          cd /home/ruslan/instagram-bot || exit 1
          
          # Показываем текущую информацию
          echo "👤 User: $(whoami)"
          echo "📁 Directory: $(pwd)"
          echo "📝 Current commit: $(git rev-parse HEAD)"
          
          # Пуллим последние изменения
          echo "📥 Pulling latest changes..."
          git pull origin main
          
          # Показываем новый коммит
          echo "📝 New commit: $(git rev-parse HEAD)"
          
          # Останавливаем контейнеры
          echo "🛑 Stopping containers..."
          docker-compose down
          
          # Собираем и запускаем новые контейнеры с кэшированием
          echo "🔨 Building and starting containers..."
          
          # Используем buildx для лучшего кэширования
          export DOCKER_BUILDKIT=1
          export COMPOSE_DOCKER_CLI_BUILD=1
          
          docker-compose build --parallel
          docker-compose up -d
          
          # Ждем немного для запуска
          echo "⏳ Waiting for services to start..."
          sleep 15
          
          # Проверяем статус контейнеров
          echo "📊 Container status:"
          docker-compose ps
          
          # Проверяем здоровье сервисов
          echo "🔍 Checking service health..."
          
          # Backend health check с повторами
          BACKEND_HEALTHY=false
          for i in {1..6}; do
            if curl -f http://localhost:8000/health > /dev/null 2>&1; then
              echo "✅ Backend is healthy"
              BACKEND_HEALTHY=true
              break
            else
              echo "⏳ Backend not ready yet (attempt $i/6)..."
              sleep 5
            fi
          done
          
          if [ "$BACKEND_HEALTHY" = false ]; then
            echo "❌ Backend health check failed"
            echo "📋 Backend logs:"
            docker-compose logs --tail=10 app
          fi
          
          # Frontend health check с повторами
          FRONTEND_HEALTHY=false
          for i in {1..4}; do
            if curl -f http://localhost:3000 > /dev/null 2>&1; then
              echo "✅ Frontend is healthy"
              FRONTEND_HEALTHY=true
              break
            else
              echo "⏳ Frontend not ready yet (attempt $i/4)..."
              sleep 5
            fi
          done
          
          if [ "$FRONTEND_HEALTHY" = false ]; then
            echo "❌ Frontend health check failed"
            echo "📋 Frontend logs:"
            docker-compose logs --tail=10 frontend
          fi
          
          # Проверяем Celery
          if docker-compose ps celery | grep -q "Up"; then
            echo "✅ Celery worker is running"
          else
            echo "❌ Celery worker is not running"
            echo "📋 Celery logs:"
            docker-compose logs --tail=10 celery
          fi
          
          echo ""
          echo "🎉 Deployment completed at $(date)"
          echo "🌐 Frontend: http://94.131.86.226:3000"
          echo "🔧 Backend: http://94.131.86.226:8000"